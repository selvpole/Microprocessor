/*********************************************
 * connected	pin name	MCU pin		mode
 * ===========================================
 *
 * LCD RS		D3			PB3			output
 * LCD R/W		D4			PB5			output
 * LCD E		D5			PB4			output
 * LCD D0		D6			PB10		output
 * LCD D1		D7			PA8			output
 * LCD D2		D8			PA9			output
 * LCD D3		D9			PC7			output
 * LCD D4		D10			PB6			output
 * LCD D5		D11			PA7			output
 * LCD D6		D12			PA6			output
 * LCD D7		D13			PA5			output
 *
 ********************************************/
#include "../inc/stm32l476xx.h"

// setting GPIO port as output mode
void GPIO_MODER(){
	GPIOB->MODER &= ~GPIO_MODER_MODE3;
	GPIOB->MODER |= GPIO_MODER_MODER3_0;

	GPIOB->MODER &= ~GPIO_MODER_MODE5;
	GPIOB->MODER |= GPIO_MODER_MODER5_0;

	GPIOB->MODER &= ~GPIO_MODER_MODE4;
	GPIOB->MODER |= GPIO_MODER_MODER4_0;

	GPIOB->MODER &= ~GPIO_MODER_MODE10;
	GPIOB->MODER |= GPIO_MODER_MODER10_0;

	GPIOA->MODER &= ~GPIO_MODER_MODE8;
	GPIOA->MODER |= GPIO_MODER_MODER8_0;

	GPIOA->MODER &= ~GPIO_MODER_MODE9;
	GPIOA->MODER |= GPIO_MODER_MODER9_0;

	GPIOC->MODER &= ~GPIO_MODER_MODE7;
	GPIOC->MODER |= GPIO_MODER_MODER7_0;

	GPIOB->MODER &= ~GPIO_MODER_MODE6;
	GPIOB->MODER |= GPIO_MODER_MODER6_0;

	GPIOA->MODER &= ~GPIO_MODER_MODE7;
	GPIOA->MODER |= GPIO_MODER_MODER7_0;

	GPIOA->MODER &= ~GPIO_MODER_MODE6;
	GPIOA->MODER |= GPIO_MODER_MODER6_0;

	GPIOA->MODER &= ~GPIO_MODER_MODE5;
	GPIOA->MODER |= GPIO_MODER_MODER5_0;
}
// high speed mode
void GPIO_SPEEDR(){
	GPIOB->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED3;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED3_1;

	GPIOB->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED5;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED5_1;

	GPIOB->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED4;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED4_1;

	GPIOB->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED10;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED10_1;

	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED8_1;

	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED9;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED9_1;

	GPIOC->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED7;
	GPIOC->OSPEEDR |= GPIO_OSPEEDR_OSPEED7_1;

	GPIOB->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED6;
	GPIOB->OSPEEDR |= GPIO_OSPEEDR_OSPEED6_1;

	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED7;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED7_1;

	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED6;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED6_1;

	GPIOA->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED5;
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED5_1;
}
// pull up mode
void GPIO_PUPDR(){
	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD3;
	GPIOB->PUPDR |= GPIO_PUPDR_PUPD3_0;

	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD5;
	GPIOB->PUPDR |= GPIO_PUPDR_PUPD5_0;

	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD4;
	GPIOB->PUPDR |= GPIO_PUPDR_PUPD4_0;

	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD10;
	GPIOB->PUPDR |= GPIO_PUPDR_PUPD10_0;

	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD8;
	GPIOA->PUPDR |= GPIO_PUPDR_PUPD8_0;

	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD9;
	GPIOA->PUPDR |= GPIO_PUPDR_PUPD9_0;

	GPIOC->PUPDR &= ~GPIO_PUPDR_PUPD7;
	GPIOC->PUPDR |= GPIO_PUPDR_PUPD7_0;

	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD6;
	GPIOB->PUPDR |= GPIO_PUPDR_PUPD6_0;

	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD7;
	GPIOA->PUPDR |= GPIO_PUPDR_PUPD7_0;

	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD6;
	GPIOA->PUPDR |= GPIO_PUPDR_PUPD6_0;

	GPIOA->PUPDR &= ~GPIO_PUPDR_PUPD5;
	GPIOA->PUPDR |= GPIO_PUPDR_PUPD5_0;
}
// GPIO initial
void GPIO_init(){
	RCC->AHB2ENR |= 0x7; // PA, PB, PC
	GPIO_MODER();
	GPIO_SPEEDR();
	GPIO_PUPDR();
}

void LCD_write(int input, int isCmd){
	// RS: PB3
	GPIOB->ODR &= ~GPIO_ODR_OD3;
	GPIOB->ODR |= isCmd<<3;
	// R/W: PB5
	GPIOB->BRR |= GPIO_BRR_BR4; // set 0: write only
	/* DATA */
	// D0: PB10
	GPIOB->ODR &= ~GPIO_ODR_OD10;
	GPIOB->ODR |= (input%2)<<10;
	input/=2;
	// D1: PA8
	GPIOA->ODR &= ~GPIO_ODR_OD8;
	GPIOA->ODR |= (input%2)<<8;
	input/=2;
	// D2: PA9
	GPIOA->ODR &= ~GPIO_ODR_OD9;
	GPIOA->ODR |= (input%2)<<9;
	input/=2;
	// D3: PC7
	GPIOC->ODR &= ~GPIO_ODR_OD7;
	GPIOC->ODR |= (input%2)<<7;
	input/=2;
	// D4: PB6
	GPIOB->ODR &= ~GPIO_ODR_OD6;
	GPIOB->ODR |= (input%2)<<6;
	input/=2;
	// D5: PA7
	GPIOA->ODR &= ~GPIO_ODR_OD7;
	GPIOA->ODR |= (input%2)<<7;
	input/=2;
	// D6: PA6
	GPIOA->ODR &= ~GPIO_ODR_OD6;
	GPIOA->ODR |= (input%2)<<6;
	input/=2;
	// D7: PA5
	GPIOA->ODR &= ~GPIO_ODR_OD5;
	GPIOA->ODR |= (input%2)<<5;
	input/=2;

	// E: PB4
	// set E high
	GPIOB->BSRR |= GPIO_BSRR_BS4;
	while((GPIOB->ODR&GPIO_ODR_OD4)==0);
	// set E low
	GPIOB->BRR |= GPIO_BRR_BR4;
	while((GPIOB->ODR&GPIO_ODR_OD4)!=0);
}

void LCD_init(){
	GPIO_init();
	LCD_write(0x38,0); // Function Setting: CGR
	LCD_write(0x06,0); // entry mode: left to right
	LCD_write(0x0C,0); // Display on
	LCD_write(0x01,0); // Clear Screen
	LCD_write(0x80, 0);	/* reset the DD RAM address */
	return ;
}
